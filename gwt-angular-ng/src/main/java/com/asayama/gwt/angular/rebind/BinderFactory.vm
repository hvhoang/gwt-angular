/*++
 * Provided: ${packageName}.${className}
 * Generate: ${packageName}.__${className}
 */
package ${packageName};

import com.asayama.gwt.jsni.client.JSClosure;

public class __${className} implements ${className} {

    @Override
    public JSClosure create(${supportedRootClassType} object) {
#foreach(${supportedClassType} in ${classTypeFields.classTypes})
#set($fields = ${classTypeFields.getInjectables($supportedClassType)})
#if (${fields.size()} > 0)
        if (object instanceof ${supportedClassType.qualifiedSourceName}) {
            return __${className}_create((${supportedClassType.qualifiedSourceName}) object);
        }
#end
#end
        return null;
    }

#foreach(${supportedClassType} in ${classTypeFields.classTypes})
#set($fields = ${classTypeFields.getInjectables($supportedClassType)})
#if (${fields.size()} > 0)
    private native JSClosure __${className}_create(${supportedClassType.qualifiedSourceName} object) /*-{
        return function (#foreach($field in $fields)${field.name}#if(${foreach.hasNext}), #end#end) {
#foreach($field in $fields)
            object.@${field.className}::${field.name} = ${field.name};
#end
        };
    }-*/;

#end
#end
}
//--end of ${packageName}.__${className}
